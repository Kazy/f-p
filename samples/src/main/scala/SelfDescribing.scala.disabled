package silt.samples

import scala.pickling._
import Defaults._
import binary._

object SelfDescribing extends App {

  val pair: (Int, List[String]) = (4, List("a", "b"))

  // 1. generate unpickler
  val unpickler = implicitly[Unpickler[(Int, List[String])]]
  // 2. pickle value
  val p = pair.pickle
  // println(p.value)

  // 3. create SelfDescribing instance
  val sd = SelfDescribing(unpickler.getClass.getName, p.value)

  // 4. pickle SelfDescribing instance
  val sdp = sd.pickle

  // 5. unpickle SelfDescribing instance
  val up = sdp.unpickle[SelfDescribing]

  // 6. call result() to unpickle the wrapped blob
  val res = up.result()
  println(res)

}

// vim: set tw=80 ft=scala:
